start_wind <- numeric(number_windows)
for(i in 1:number_windows)
{
start <- starts[i]
end <- ends[i]
gc_wind[i] <- gc_content_single(halophile_1[start:end])
start_wind[i] <-  start
}
plot(x = start_wind, y = gc_wind)
df_halophile_gc <- data.frame(start = start_wind, gc = gc_wind)
ggplot(data = df_halophile_gc, aes(x = start, y = gc)) +
geom_point()
ggplot(df_halophile_gc, aes(x = start, y = gc)) +
geom_point() +
theme_minimal() +
geom_hline(yintercept = gc_halophile_1) +
geom_hline(yintercept = gc_halophile_1 + 2*sd(gc_wind), color = "red") +
geom_hline(yintercept = gc_halophile_1 - 2*sd(gc_wind), color = "red")
# import the kbase annotation output
gb_file <- "C:/Users/rafae/OneDrive/Desktop/BIS23B_W2023_RVC/GBFF file/B23F22_3_S3.gbff"
source("lab6_functions_Winter2023.R")
# view the genes that we have in our sample
my_genes <- unique(fetch_my_genes(gb_file))
# pick three of those genes and put their names here!
check_genes <- c("prpD", "moaE", "cusA")
# get the amino acid composition!
aa_comp <- aa_per_gene_counter(gb_file, check_genes)
aa_comp
ggplot(aa_comp,aes(x = aa, y = gene)) +
geom_tile(aes(fill = proportion))
ggplot(aa_comp, aes(x = aa, y = gene)) +
geom_tile(aes(fill = proportion)) +
scale_fill_gradient2(low = "red", mid = "yellow", high = "green", midpoint = mean(aa_comp$proportion))
my_total_aa <- aa_overall_counter(gb_file)
my_total_aa
gb_file_6 <- "C:/Users/rafae/OneDrive/Desktop/BIS23B_W2023_RVC/GBFF file/B23F22_6_S5.gbff"
my_total_aa_6 <- aa_overall_counter(gb_file_6)
my_total_aa_6
gb_file_9 <- "C:/Users/rafae/OneDrive/Desktop/BIS23B_W2023_RVC/GBFF file/B23F22_9_S6.gbff"
my_total_aa_9 <- aa_overall_counter(gb_file_9)
my_total_aa_9
first_merge <- merge(my_total_aa, my_total_aa_6, by=c("aa"))
second_merge <- merge(first_merge, my_total_aa_9, by=c("aa"))
second_merge <- second_merge %>%
select(aa, proportion.x, proportion.y, proportion) %>%
rename("proportion.x" = "genome_3",
"proportion.y" = "genome_6",
"proportion" = "genome_9") %>%
pivot_longer(-aa,
names_to = "genome",
values_to = "proportion")
second_merge
ggplot(second_merge,aes(x = aa, y = genome)) +
geom_tile(aes(fill = proportion))
ggplot(second_merge,aes(x = aa, y = genome)) +
geom_tile(aes(fill = proportion)) +
scale_fill_brewer(palette = "PuRd")
my_palette <- paletteer_d("colorBlindness::paletteMartin")
ggplot(second_merge,aes(x = aa, y = genome)) +
geom_tile(aes(fill = proportion)) +
scale_fill_manual(values=my_palette)
ggplot(second_merge,aes(x = aa, y = genome)) +
geom_tile(aes(fill = proportion))
ggplot(second_merge,aes(x = aa, y = genome)) +
geom_tile(aes(fill = proportion))+
scale_fill_gradient2(low = "red", mid = "yellow", high = "green")
ggplot(second_merge,aes(x = aa, y = genome)) +
geom_tile(aes(fill = proportion))+
scale_fill_gradient2(low = "red", mid = "orange", high = "green")
ggplot(second_merge,aes(x = aa, y = genome)) +
geom_tile(aes(fill = proportion))+
scale_fill_gradient2(low = "red", mid = "blue", high = "green")
ggplot(second_merge,aes(x = aa, y = genome)) +
geom_tile(aes(fill = proportion))+
scale_fill_gradient2(low = "red", mid = "red", high = "green")
ggplot(second_merge,aes(x = aa, y = genome)) +
geom_tile(aes(fill = proportion))
ggplot(second_merge,aes(x = aa, y = genome)) +
geom_tile(aes(fill = proportion))+
scale_fill_gradient2(low = "red", mid = "yellow", high = "green"
ggplot(second_merge,aes(x = aa, y = genome)) +
geom_tile(aes(fill = proportion))+
scale_fill_gradient2(low = "red", mid = "yellow", high = "green")
ggplot(second_merge,aes(x = aa, y = genome)) +
geom_tile(aes(fill = proportion))+
scale_fill_gradient2(low = "red", mid = "orange", high = "green")
ggplot(second_merge,aes(x = aa, y = genome)) +
geom_tile(aes(fill = proportion))+
scale_fill_gradient2(low = "orange", mid = "green", high = "blue")
ggplot(second_merge,aes(x = aa, y = genome)) +
geom_tile(aes(fill = proportion))+
scale_fill_gradient2(low = "orange", mid = "yellow", high = "blue")
ggplot(second_merge,aes(x = aa, y = genome)) +
geom_tile(aes(fill = proportion))+
scale_fill_gradient(low = "orange", high = "blue")
ggplot(second_merge,aes(x = aa, y = genome)) +
geom_tile(aes(fill = proportion))+
scale_fill_gradient(low = "red", high = "green")
ggplot(second_merge,aes(x = aa, y = genome)) +
geom_tile(aes(fill = proportion))+
scale_fill_gradient(low = "yellow", high = "red")
ggplot(second_merge,aes(x = aa, y = genome)) +
geom_tile(aes(fill = proportion))+
scale_fill_gradient2(low = "yellow", mid = "orange" high = "red")
ggplot(second_merge,aes(x = aa, y = genome)) +
geom_tile(aes(fill = proportion))+
scale_fill_gradient2(low = "yellow", mid = "orange", high = "red")
ggplot(second_merge,aes(x = aa, y = genome)) +
geom_tile(color = "black", aes(fill = proportion))+
scale_fill_gradient2(low = "yellow", mid = "orange", high = "red")
ggplot(second_merge,aes(x = aa, y = genome)) +
geom_tile(color = "black", aes(fill = proportion))+
scale_fill_gradientn(colors = palette = "PuRd")
ggplot(second_merge,aes(x = aa, y = genome)) +
geom_tile(color = "black", aes(fill = proportion))+
scale_fill_gradientn(colors = palette("PuRd"))
ggplot(second_merge,aes(x = aa, y = genome)) +
geom_tile(color = "black", aes(fill = proportion))+
scale_fill_gradientn(colors = palette("GnBu"))
ggplot(second_merge,aes(x = aa, y = genome)) +
geom_tile(color = "black", aes(fill = proportion))+
scale_fill_gradientn(colors = palette(4, "GnBu"))
ggplot(second_merge,aes(x = aa, y = genome)) +
geom_tile(color = "black", aes(fill = proportion))+
scale_fill_gradientn(colors =paletteer_d("colorBlindness::paletteMartin"))
ggplot(second_merge,aes(x = aa, y = genome)) +
geom_tile(color = "black", aes(fill = proportion))+
scale_fill_gradientn(colors =paletteer_d("ggsci::default_gsea"))
ggplot(second_merge,aes(x = aa, y = genome)) +
geom_tile(color = "black", aes(fill = proportion))+
scale_fill_gradientn(colors =paletteer_d("ggsci::teal_material"))
ggplot(second_merge,aes(x = aa, y = genome)) +
geom_tile(color = "black", aes(fill = proportion))+
scale_fill_gradientn(colors =paletteer_d("khroma::broc"))
ggplot(second_merge,aes(x = aa, y = genome)) +
geom_tile(color = "black", aes(fill = proportion))+
scale_fill_gradientn(colors =paletteer_d("khroma::cork"))
ggplot(second_merge,aes(x = aa, y = genome)) +
geom_tile(color = "black", aes(fill = proportion))+
scale_fill_gradientn(colors =paletteer_d("khroma::vik"))
ggplot(second_merge,aes(x = aa, y = genome)) +
geom_tile(color = "black", aes(fill = proportion))+
scale_fill_gradientn(colors =paletteer_d("khroma::lisbon"))
ggplot(second_merge,aes(x = aa, y = genome)) +
geom_tile(color = "black", aes(fill = proportion))+
scale_fill_gradientn(colors =paletteer_d("khroma::bamO"))
ggplot(second_merge,aes(x = aa, y = genome)) +
geom_tile(color = "black", aes(fill = proportion))+
scale_fill_gradientn(colors =paletteer_d("khroma::romaO"))
ggplot(second_merge,aes(x = aa, y = genome)) +
geom_tile(color = "black", aes(fill = proportion))+
scale_fill_gradientn(colors =paletteer_d("khroma::PRGn"))
ggplot(second_merge,aes(x = aa, y = genome)) +
geom_tile(color = "black", aes(fill = proportion))+
scale_fill_gradientn(colors =paletteer_d("khroma::BuRd"))
ggplot(second_merge,aes(x = aa, y = genome)) +
geom_tile(color = "black", aes(fill = proportion))+
scale_fill_gradientn(colors =paletteer_d("LaCroixColoR::PeachPear"))
khroma
ggplot(second_merge,aes(x = aa, y = genome)) +
geom_tile(color = "black", aes(fill = proportion))+
scale_fill_gradientn(colors =paletteer_d("khroma"::"BuRd"))
ggplot(second_merge,aes(x = aa, y = genome)) +
geom_tile(color = "black", aes(fill = proportion))+
scale_fill_gradientn(colors =paletteer_d("khroma::BuRd"))
ggplot(second_merge,aes(x = aa, y = genome)) +
geom_tile(color = "black", aes(fill = proportion))+
scale_fill_gradientn(colors =paletteer_d("ggsci::teal_material"))
ggplot(second_merge,aes(x = aa, y = genome)) +
geom_tile(color = "black", aes(fill = proportion))+
scale_fill_gradientn(colors =paletteer_d("ggsci::cyan_material"))
teal_material
ggplot(second_merge,aes(x = aa, y = genome)) +
geom_tile(color = "black", aes(fill = proportion))+
scale_fill_gradientn(colors =paletteer_d("ggsci::teal_material"))
getwd()
setwd("C:/Users/rafae/OneDrive/Desktop/BIS23B_W2023_RVC/ape phylogenetic tree")
# install.packages("ape") # run this the first time!
library(ape)
fasta_16s <- ape::read.FASTA("concat_16S_MUSCLE.fasta") # change this to the name of your output file.
install.packages("ape") # run this the first time!
install.packages("ape")
knitr::opts_chunk$set(echo = TRUE, fig.cap="figure", message = FALSE, purl = FALSE)
library(tidyverse)
library(Biostrings)
# creating a gc content counter for a single string (not a full stringset)
gc_content_single <- function(single_seq)
{
# get the frequencies of G and C
gc_freq <- alphabetFrequency(single_seq,baseOnly=TRUE,as.prob = TRUE)[c("G","C")]
# sum the two values to get a single GC content
gc_sum <- sum(gc_freq)
return(gc_sum)
}
install.packages("ape") # run this the first time!
library(ape)
fasta_16s <- ape::read.FASTA("concat_16S_MUSCLE.fasta") # change this to the name of your output file.
#install.packages("ape") # run this the first time!
library(ape)
fasta_16s <- ape::read.FASTA("concat_16S_MUSCLE.fasta") # change this to the name of your output file.
getwd()
fasta_16s <- ape::read.FASTA("concat_16S_MUSCLE.fasta") # change this to the name of your output file.
setwd("C:/Users/rafae/OneDrive/Desktop/BIS23B_W2023_RVC")
fasta_16s <- ape::read.FASTA("C:/Users/rafae/OneDrive/Desktop/BIS23B_W2023_RVC/concat_16S_MUSCLE.fasta") # change this to the name of your output file.
#install.packages("ape") # run this the first time!
library(ape)
fasta_16s <- ape::read.FASTA("C:/Users/rafae/OneDrive/Desktop/BIS23B_W2023_RVC/ape_phylogenetic_tree/concat_16S_MUSCLE.fasta") # change this to the name of your output file.
# compute distances
dist.dna(fasta_16s)
# construct a tree
nj()fasta`
# construct a tree
nj(fasta_16s)
# plot the phylogeny
plot(fasta_16s)
# construct a tree
plot.phylo(fasta_16s)
# construct a tree
class(fasta_16s)
# construct a tree
nj(fasta_16s)
# compute distances
dist.dna(fasta_16s[c(1:5,17)])
# compute distances
dist.dna(fasta_16s[c(1:5)])
# compute distances
dist.dna(fasta_16s[c(1:6)])
# compute distances
dist.dna(fasta_16s[c(1:7)])
# compute distances
dist.dna(fasta_16s[c(1:8)])
# compute distances
dist.dna(fasta_16s[c(1:9)])
# compute distances
dist.dna(fasta_16s[c(1:10)])
# compute distances
dist.dna(fasta_16s[c(1:11)])
# compute distances
dist.dna(fasta_16s[c(1:12)])
# compute distances
dist.dna(fasta_16s[c(1:13)])
# compute distances
dist.dna(fasta_16s[c(1:12)])
# construct a tree
nj(fasta_16s[c(1:12)])
# construct a tree
bionj(fasta_16s)
nj(fasta_16s)
# construct a tree
bionj(unlist(fasta_16s))
# construct a tree
#bionj(unlist(fasta_16s))
nj(fasta_16s)
# construct a tree
#bionj(unlist(fasta_16s))
nj(unlist(fasta_16s))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(here)
library(naniar)
library(RColorBrewer)
library(paletteer)
library(skimr)
library(palmerpenguins)
heartrate %>%
pivot_longer(-patient, #will not pivot
names_to = "drug", #makes a new column name
values_to = "heartrate" #values moved to
)
heartrate <- read_csv("data/heartrate.csv")
heartrate %>%
pivot_longer(-patient, #will not pivot
names_to = "drug", #makes a new column name
values_to = "heartrate" #values moved to
)
heartrate
relig_income <- read_csv(here("data", "relig_income.csv"))
setwd("C:/Users/rafae/OneDrive/Desktop/BIS15W2023_RVasquez-Chan/practice_midterm2")
relig_income <- read_csv(here("data", "relig_income.csv"))
getwd()
relig_income <- read_csv(here("data", "relig_income.csv"))
relig_income <- read_csv("data/relig_income.csv"))
relig_income <- read_csv("data/relig_income.csv")
relig_income
relig_income %>%
pivot_longer(-religion,
names_to = "income",
values_to = "n_total")
heartrate %>%
pivot_longer(-patient, #will not pivot
names_to = "drug", #Takes column names and makes it a new column                                   with the name you choose with names_to
values_to = "heartrate" #values moved to
)
heartrate
heartrate
heartrate %>%
pivot_longer(-patient, #will not pivot
names_to = "drug", #Takes column names and makes it a new column                                   with the name you choose with names_to
values_to = "heartrate" #values moved to
)
heartrate2 <- readr::read_csv("data/heartrate2.csv")
heartrate2
heartrate2 %>%
separate(patient, into= c("patient", "sex"), sep = "_")
heartrate2 #we want to separate patient names from their sexes
heartrate3 <- heartrate2 %>%
separate(patient, into= c("patient", "sex"), sep = "_")
heartrate3
heartrate3 %>%
unite(patient_sex, "patient", "sex", sep = " ")
tb_data <- read_csv("data/tb_data.csv")
tb_data
tb_data %>%
pivot_wider(names_from = "key", #the observations under key will become new columns
values_from = "value")
edu_level <- readr::read_csv("data/education_level.csv")
edu_level
edu_level %>%
pivot_wider(names_from = (education_level), #new column names come from the education_level column
values_from = c(mean_income, n)) #values come from two separate columns
ggplot(data=iris, mapping=aes(x=Species, y=Petal.Length))+geom_boxplot()
homerange <- read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
setwd("C:/Users/rafae/OneDrive/Desktop/BIS15W2023_RVasquez-Chan/practice_midterm2")
homerange <- read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
setwd("C:/Users/rafae/OneDrive/Desktop/BIS23B_W2023_RVC")
setwd("C:/Users/rafae/OneDrive/Desktop/BIS15W2023_RVasquez-Chan/Midterm_2_cheatsheet")
homerange <- read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
knitr::opts_chunk$set(echo = TRUE)
homerange <- read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
library(tidyverse)
library(janitor)
library(here)
library(naniar)
library(RColorBrewer)
library(paletteer)
library(skimr)
library(palmerpenguins)
homerange <- read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
edu_level <- readr::read_csv("data/education_level.csv")
setwd("C:/Users/rafae/OneDrive/Desktop/BIS23B_W2023_RVC")
setwd("C:/Users/rafae/OneDrive/Desktop/BIS15W2023_RVasquez-Chan/Midterm_2_cheatsheet")
homerange <- read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
setwd("C:/Users/rafae/OneDrive/Desktop/BIS15W2023_RVasquez-Chan/Midterm_2_cheatsheet")
getwd()
homerange <- read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
homerange <- read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
homerange <- read_csv("C:/Users/rafae/OneDrive/Desktop/BIS15W2023_RVasquez-Chan/Midterm_2_cheatsheet/data/Tamburelloetal_HomeRangeDatabase.csv")
homerange <- read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
homerange %>%
ggplot(aes(x=class, y = log10.mass))+
geom_boxplot()
homerange <- read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
ggplot(homerange, mapping=aes(x=log10.mass, y=log10.hra))+geom_point()+
geom_smooth(method=lm, se=T) #add a line of best fit
ggplot(homerange, mapping=aes(x=log10.mass, y=log10.hra))+geom_point()
homerange %>%
ggplot(aes(x=trophic.guild)) +
geom_bar() #good for counts
ggplot(homerange, mapping=aes(x=log10.mass, y=log10.hra))+geom_point()+
geom_smooth(method=lm, se=T)
life_history <- read_csv("data/mammal_lifehistories_v2.csv", na="-999") %>% clean_names()
life_history %>%
count(order, sort=T) %>%
ggplot(aes(x=order, y=n))+ geom_col()+ coord_flip()
life_history %>%
group_by(order) %>%
summarize(mean_mass=mean(mass, na.rm=T)) %>%
ggplot(aes(x=order, y=mean_mass))+ geom_col()+
coord_flip()+
scale_y_log10() #scales y axis to be log
life_history %>%
group_by(order) %>%
summarize(mean_mass=mean(mass, na.rm=T)) %>%
ggplot(aes(x=order, y=mean_mass))+ geom_col()+
coord_flip()+
scale_y_log10()
elephants <- read_csv("data/elephantsMF.csv") %>% clean_names()
elephants <- read_csv("data/elephantsMF.csv") %>% clean_names()
elephants %>%
ggplot(aes(x=age, y=height)) +
geom_point() +
geom_smooth(method=lm, se=F)+
labs(title = "Elephant Age vs Height",
x="Age",
y="Height")
elephants %>%
ggplot(aes(x=age, y=height)) +
geom_point() +
geom_smooth(method=lm, se=F)+
labs(title = "Elephant Age vs Height",
x="Age",
y="Height")+
theme(plot.title = element_text(size=rel(1.5), hjust=0.5))
p <- homerange %>%
ggplot(aes(x= log10.mass, y= log10.hra))
p +geom_point(size=1)
p+geom_point(aes(shape=thermoregulation, color=thermoregulation), size=1.75)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(here)
library(naniar)
library(RColorBrewer)
library(paletteer)
library(skimr)
library(palmerpenguins)
homerange %>%
ggplot(aes(x = taxon, fill = trophic.guild)) + geom_bar() +
coord_flip() +
labs(title = "Observations by Taxon in Homerange Data",
x = "Taxonomic Group",
fill = "Trophic Guild")
homerange %>%
ggplot(aes(x = taxon, fill = trophic.guild)) + geom_bar(position = "dodge") +
coord_flip() +
labs(title = "Observations by Taxon in Homerange Data",
x = "Taxonomic Group",
fill = "Trophic Guild")
homerange %>%
ggplot(aes(x = taxon, fill = trophic.guild)) +
geom_bar(position = "dodge") +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = "Observations by Taxon in Homerange Data",
x = "Taxonomic Group",
fill= "Trophic Guild")
homerange %>%
ggplot(aes(x = taxon, fill = trophic.guild)) +
geom_bar(position = "dodge") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
elephants %>%
ggplot(aes(x=sex, fill=sex))+
geom_bar()
elephants %>%
ggplot(aes(x=age, y=height)) +
geom_point() +
geom_smooth(method=lm, se=F)+
labs(title = "Elephant Age vs Height",
x="Age",
y="Height")+
theme(plot.title = element_text(size=rel(1.5), hjust=0.5))
homerange <- read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
homerange %>%
ggplot(aes(x = taxon, fill = trophic.guild)) +
geom_bar(position = "dodge") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
homerange %>%
ggplot(aes(x = taxon, fill = trophic.guild))+
geom_bar(position = position_fill())+
scale_y_continuous(labels = scales::percent)+
coord_flip()
homerange %>%
ggplot(aes(x = class, y = log10.mass)) +
geom_boxplot()
homerange %>%
ggplot(aes(x = class, y = log10.mass, group = taxon)) +
geom_boxplot()
homerange %>%
ggplot(aes(x = class, y = log10.mass, fill = taxon)) +
geom_boxplot()
grDevices::colors()
homerange %>%
ggplot(aes(x = log10.mass)) +
geom_density(fill="deepskyblue4", alpha  =0.4, color = "black")+
labs(title = "Distribution of Body Mass")
homerange %>%
ggplot(aes(x=log10.mass)) +
geom_histogram(aes(y = ..density..), fill = "deepskyblue4", alpha = 0.4, color = "black")+
geom_density(color = "red")+
labs(title = "Distribution of Body Mass")
homerange %>%
ggplot(aes(x=log10.mass)) +
geom_histogram(aes(y = ..density..), fill = "deepskyblue4", alpha = 0.4, color = "black")+
geom_density(color = "red")+
labs(title = "Distribution of Body Mass")
homerange %>%
select(log10.mass) %>%
summarise(min=min(log10.mass),
max=max(log10.mass))
homerange %>%
ggplot(aes(x=range_category, fill=taxon))+ geom_bar(position = "dodge", alpha = 0.7, color = "black")
library(gtools)
quartiles <- quantcut(homerange$log10.hra)
table(quartiles)
homerange <- homerange %>%
mutate(range_category = case_when(log10.hra<=3.653 ~ "very_small",
log10.hra >=3.653 & log10.hra <= 4.595 ~ "small",
log10.hra >= 4.595 & log10.hra <=6.016 ~ "medium",
log10.hra >= 6.016 ~"large"))
homerange
homerange <- read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
homerange %>%
ggplot(aes(x=range_category, fill=taxon))+ geom_bar(position = "dodge", alpha = 0.7, color = "black")
homerange %>%
ggplot(aes(x=taxon, fill=trophic.guild))+
geom_bar(na.rm=T, position="dodge", alpha = 0.85)+
scale_fill_brewer(palette = "PuRd")+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
homerange %>%
ggplot(aes(x = log10.mass, y = log10.hra, color = locomotion)) +
geom_point() +
xlim(0, 4) +
ylim(1, 6)
ecosphere <- read_csv("data/ecs21351-sup-0003-SupplementS1.csv", skip=2, col_names = T) %>%
clean_names() %>%
separate(scientific_name, into = c("genus", "species"), sep=" ") %>%
na.omit() # remove NA's for now
